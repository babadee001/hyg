{"version":3,"sources":["components/navbar/index.jsx","components/forms/signup/signup.jsx","components/signup/signup.jsx","components/forms/signin/signin.jsx","components/signin/signin.jsx","components/contact/index.jsx","components/forms/resetPassword/reset.jsx","components/resetPassword/index.jsx","components/authentication/auth.jsx","utils/utils.js","components/data/index.jsx","App.js","serviceWorker.js","index.jsx"],"names":["Navbar","className","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","this","props","link1","value1","link2","value2","React","Component","SignupForm","onSubmit","event","a","preventDefault","state","username","securityAnswer","password","securityQuestion","email","fetch","method","headers","body","JSON","stringify","catch","error","response","setState","errorMessage","data","message","json","then","jsonData","jsonServerResponse","Token","localStorage","setItem","toastr","info","history","push","onChange","bind","target","name","value","align","placeholder","required","question","answer","withRouter","Signup","SigninForm","removeItem","About","action","for","rows","cols","resetForm","newPassword","status","resetPassword","RequireAdmin","ComposedComponent","Utils","token","jwt","verify","err","decoded","console","log","Data","search","searchQuery","filteredData","allData","filter","toLowerCase","includes","decode","getItem","currentUser","firstData","secondData","lat","long","latitude","Number","longitude","utils","getData","successMessage","onhandleEdit","verifyToken","dataReady","editId","postData","deleteData","setEditId","clearFields","renderTable","currentData","length","i","firstdata","seconddata","onFocus","onClick","columns","label","field","sort","width","responsive","striped","bordered","hover","searching","copyArray","index","findIndex","x","splice","role","tabIndex","aria-labelledby","aria-hidden","data-dismiss","App","exact","path","component","Signin","Contact","Reset","Auth","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4150485e.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default class Navbar extends React.Component {\n    // constructor(props) {\n    //     super(props);\n    //     };\n    render() {\n        return (\n            <div>\n              <nav className=\"navbar navbar-expand-lg navbar-light bg-light navbar-fixed\">\n                  <div className=\"container\">\n                  <Link className=\"navbar-brand\" to=\"#\">Amir</Link>\n                  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                      <span className=\"navbar-toggler-icon\"></span>\n                  </button>\n                  <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                      <ul className=\"navbar-nav\">\n                      <li className=\"nav-item active\">\n                          <Link className=\"nav-link\" to=\"/\">Home <span className=\"sr-only\">(current)</span></Link>\n                      </li>\n                      <li className=\"nav-item\">\n                          <Link className=\"nav-link\" to=\"/contact\">Contact Us</Link>\n                      </li>\n                      <li className=\"nav-item\">\n                          <Link className=\"nav-link\" to={this.props.link1}>{this.props.value1}</Link>\n                      </li>\n                      <li className=\"nav-item\">\n                          <Link className=\"nav-link\" to={this.props.link2}>{this.props.value2}</Link>\n                      </li>\n                      </ul>\n                  </div>\n                  </div>\n                  </nav>\n            </div>\n          )\n    }\n}","import React from 'react';\nimport toastr from 'toastr'\nimport { Link, withRouter } from 'react-router-dom';\nimport './signup.scss';\nimport Navbar from '../../navbar';\n\n\nclass SignupForm extends React.Component{\n    constructor(props){\n        super(props);\n        this.state= {\n            username: '',\n            securityAnswer: '',\n            securityQuestion: '',\n            password: '',\n            email: '',\n            errorMessage: ''\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n    onChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    onSubmit = async event => {\n        event.preventDefault();\n        const { username, securityAnswer, password, securityQuestion, email } = this.state\n        const response = await fetch('/signup', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                username, securityAnswer, password, securityQuestion, email\n            }),\n          }).catch((error) => {\n            if (error.response) {\n                this.setState({\n                    errorMessage: error.response.data.message\n                })\n            } else {\n              throw error;\n            }\n          });\n          const jsonServerResponse = await response.json()\n            .then(jsonData => jsonData);\n            if (jsonServerResponse.Token) {\n                localStorage.setItem('token', jsonServerResponse.Token);\n                toastr.info(jsonServerResponse.message)\n                this.props.history.push('/dashboard')\n                // const decoded = jwt.decode(jsonServerResponse.Token);\n              } else {\n                this.setState({\n                    errorMessage: jsonServerResponse.message.message || jsonServerResponse.message\n                })\n              }\n        // this.props.userSignupRequest(this.state)\n    }\n    render() {\n        return(\n            <div>\n                <Navbar link1='/signin' value1='Sign in' />\n                <div className=\"main\">\n                <p className=\"sign\" align=\"center\">Signup</p>\n                <form className=\"form1\" onSubmit={ this.onSubmit }>\n                <p className=\"errormessage\">{this.state.errorMessage}</p>\n                <input className=\"un\" type=\"text\" align=\"center\" placeholder=\"Username\" value={this.state.username} onChange={ this.onChange } name=\"username\" required></input>\n                <input className=\"un\" type=\"email\" align=\"center\" placeholder=\"Email\" name=\"email\" value={this.state.email} onChange={ this.onChange } required></input>\n                <select className=\"un\" value={this.state.question} onChange={ this.onChange } name=\"securityQuestion\" required>\n                    <option align=\"center\">Select your security question</option>\n                    <option>My first crush</option>\n                    <option>Name of my first Dog</option>\n                    <option>My mother's maiden name</option>\n                    <option>Street I grew up</option>\n                </select>\n                <input className=\"un\" type=\"password\" align=\"center\" placeholder=\"Security Answer\" value={this.state.answer} onChange={ this.onChange } name=\"securityAnswer\" required></input>\n                <input className=\"pass\" type=\"password\" align=\"center\" placeholder=\"Password\" value={this.state.password} onChange={ this.onChange } name=\"password\" required></input>\n                {/* <input className=\"pass\" type=\"password\" align=\"center\" placeholder=\"Confirm Password\" name=\"cpassword\"></input> */}\n                <button type=\"submit\" className=\"submit\" align=\"center\">Signup</button>\n                <p className=\"forgot\" align=\"center\">Have an account?<Link to=\"/signin\"> Signin</Link></p>\n                </form>\n                </div>\n            </div>\n        )\n    }\n}\nexport default withRouter(SignupForm)\n// SignupForm.propTypes = {\n//     signupRequest: React.PropTypes.func.isRequired,\n// }\n\n// SignupForm.contextTypes = {\n//     router: React.PropTypes.object.isRequired,\n//   };","import React, { Component } from 'react';\nimport SignupForm from '../forms/signup/signup';\nimport './signup.scss';\n\nexport default class Signup extends Component {\n\n  render() {\n    return (\n      <div>\n       <SignupForm\n       />\n      </div>\n  )\n}\n}\n","import React from 'react';\nimport toastr from 'toastr'\nimport { Link, withRouter } from 'react-router-dom';\nimport Navbar from '../../navbar';\n\n\nclass SigninForm extends React.Component{\n    constructor(props){\n        super(props);\n        this.state= {\n            password: '',\n            email: '',\n            errorMessage: ''\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n    onChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    onSubmit = async event => {\n        event.preventDefault();\n        const { password, email } = this.state\n        const response = await fetch('/signin', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                password, email\n            }),\n          }).catch((error) => {\n            if (error.response) {\n                this.setState({\n                    errorMessage: error.response.data.message\n                })\n            } else {\n              throw error;\n            }\n          });\n          const jsonServerResponse = await response.json()\n            .then(jsonData => jsonData);\n            if (jsonServerResponse.Token) {\n                localStorage.setItem('token', jsonServerResponse.Token);\n                toastr.info(jsonServerResponse.message)\n                this.props.history.push('/dashboard')\n                // const decoded = jwt.decode(jsonServerResponse.Token);\n              } else {\n                this.setState({\n                    errorMessage: jsonServerResponse.message.message || jsonServerResponse.message\n                })\n              }\n    }\n    render() {\n        return(\n            <div>\n                <Navbar link1='/signup' value1='Sign up' />\n                <div className=\"mainsignin\">\n                <p className=\"sign\" align=\"center\">Signin</p>\n                <form className=\"form1\" onSubmit={ this.onSubmit }>\n                <p className=\"errormessage\">{this.state.errorMessage}</p>\n                <input className=\"un\" type=\"email\" align=\"center\" placeholder=\"Email\" name=\"email\" value={this.state.email} onChange={ this.onChange } required></input>\n                <input className=\"pass\" type=\"password\" align=\"center\" placeholder=\"Password\" value={this.state.password} onChange={ this.onChange } name=\"password\" required></input>\n                <button type=\"submit\" className=\"submit\" align=\"center\">Sigin</button>\n                <p className=\"forgot\" align=\"center\">Forgot password?<Link to=\"/reset\"> Reset</Link></p>\n                </form>\n                </div>\n            </div>\n        )\n    }\n}\nexport default withRouter(SigninForm)","import React, { Component } from 'react';\nimport SigninForm from '../forms/signin/signin';\nimport './signin.scss';\n\nexport default class Signup extends Component {\n\n  render() {\n    localStorage.removeItem('token');\n    return (\n      <div>\n       <SigninForm\n       />\n      </div>\n  )\n}\n}\n","import React from 'react';\nimport './style.scss';\nimport Navbar from '../navbar';\n\nexport default function About(){\n    return (\n      <div>\n        <Navbar />\n        <div className=\"maincontact\">\n          <p className=\"sign\" align=\"center\">Write To Us</p>\n          <form className=\"form1\" action=\"mailto:amiramara11@gmail.com\">\n          <input className=\"pass\" type=\"text\" align=\"center\" placeholder=\"Name\"></input>\n          <input className=\"un\" type=\"email\" align=\"center\" placeholder=\"Email\"></input>\n          <label  className=\"labelcontact\" for=\"contactus\">Tell us what you think, we will get back to you:</label>\n          <textarea className=\"un\" rows=\"5\" cols=\"33\"></textarea>\n            <div className=\"btn-group group\">\n              <button className=\"submitcontact\" align=\"center\" type=\"button\">Submit</button>\n              <button className=\"submitcontact\" align=\"center\" type=\"submit\">mail</button>\n            </div>\n          </form>\n        </div>\n      </div>\n    )\n}","import React from 'react';\nimport toastr from 'toastr'\nimport { withRouter } from 'react-router-dom';\nimport Navbar from '../../navbar'\nimport './style.scss'\n\n\nclass resetForm extends React.Component{\n    constructor(props){\n        super(props);\n        this.state= {\n            securityAnswer: '',\n            securityQuestion: '',\n            newPassword: '',\n            email: '',\n            errorMessage: ''\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n    onChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    onSubmit = async event => {\n        event.preventDefault();\n        const { securityAnswer, newPassword, securityQuestion, email } = this.state\n        const response = await fetch('/reset', {\n            method: 'PUT',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                securityAnswer, newPassword, securityQuestion, email\n            }),\n          }).catch((error) => {\n            if (error.response) {\n                this.setState({\n                    errorMessage: error.response.data.message\n                })\n            } else {\n              throw error;\n            }\n          });\n          const jsonServerResponse = await response.json()\n            .then(jsonData => jsonData);\n            if (jsonServerResponse.status === 201) {\n                toastr.info(jsonServerResponse.message)\n                this.props.history.push('/signin')\n              } else {\n                this.setState({\n                    errorMessage: jsonServerResponse.message.message || jsonServerResponse.message\n                })\n              }\n    }\n    render() {\n        return(\n            <div>\n                <Navbar link1='/signup' value1='Sign up' link2='/signin' value2='Sign in' />\n                    <div className=\"mainreset\">\n                    <p className=\"sign\" align=\"center\">Reset Password</p>\n                    <form className=\"form1\" onSubmit={ this.onSubmit }>\n                    <p className=\"errormessage\">{this.state.errorMessage}</p>\n                    <input className=\"un\" type=\"email\" align=\"center\" placeholder=\"Email\" name=\"email\" value={this.state.email} onChange={ this.onChange } required></input>\n                    <select className=\"un\" value={this.state.securityQuestion} onChange={ this.onChange } name=\"securityQuestion\" required>\n                        <option align=\"center\">Select your security question</option>\n                        <option>My first crush</option>\n                        <option>Name of my first Dog</option>\n                        <option>My mother's maiden name</option>\n                        <option>Street I grew up</option>\n                    </select>\n                    <input className=\"un\" type=\"password\" align=\"center\" placeholder=\"Security Answer\" value={this.state.securityAnswer} onChange={ this.onChange } name=\"securityAnswer\" required></input>\n                    <input className=\"pass\" type=\"password\" align=\"center\" placeholder=\"New Password\" value={this.state.newPassword} onChange={ this.onChange } name=\"newPassword\" required></input>\n                    <button type=\"submit\" className=\"submit\" align=\"center\">Reset</button>\n                    </form>\n                    </div>\n            </div>\n        )\n    }\n}\nexport default withRouter(resetForm)\n// SignupForm.propTypes = {\n//     signupRequest: React.PropTypes.func.isRequired,\n// }\n\n// SignupForm.contextTypes = {\n//     router: React.PropTypes.object.isRequired,\n//   };","import React, { Component } from 'react';\nimport ResetForm from '../forms/resetPassword/reset';\n// import './signup.scss';\n\nexport default class resetPassword extends Component {\n\n  render() {\n    return (\n      <div>\n       <ResetForm\n       />\n      </div>\n  )\n}\n}\n","import React from 'react';\n// import {browserHistory} from 'react-router';\n// import utils from '../../utils/utils';\n\nfunction RequireAdmin(ComposedComponent){\n\n  class Authenticated extends React.Component {\n\n    render(){\n      return <ComposedComponent />;\n    }\n  }\n  //Return the new Component that requires authorization\n  return Authenticated;\n}\nexport default RequireAdmin;","import jwt from 'jsonwebtoken';\n\nclass Utils {\n    static async getData (){\n        const response = await fetch('/data', {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n          }).catch((error) => {\n            if (error.response) {\n                this.setState({\n                    errorMessage: error.response.data.message\n                })\n            } else {\n              throw error;\n            }\n          });\n          const jsonServerResponse = await response.json()\n                  .then(jsonData => jsonData);\n          return jsonServerResponse;\n    }\n    static async deleteData(id) {\n        const response = await fetch(`/data/${id}`, {\n            method: 'DELETE',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n          }).catch((error) => {\n            if (error.response) {\n                this.setState({\n                    errorMessage: error.response.data.message\n                })\n            } else {\n              throw error;\n            }\n          });\n          const jsonServerResponse = await response.json()\n                  .then(jsonData => jsonData);\n          return jsonServerResponse;\n    }\n\n    static async verifyToken(token) {\n      if (!token){\n        return false;\n      }\n      jwt.verify(token, 'babadee', (err, decoded) => {\n        if (err){\n          console.log(\"eeeee\", err)\n          return false\n        }\n        return true\n      })\n    }\n}\nexport default Utils;","import React, { Component } from 'react';\nimport { MDBDataTable, MDBContainer } from 'mdbreact';\nimport toastr from 'toastr';\nimport jwt from 'jsonwebtoken';\nimport './style.scss';\nimport utils from '../../utils/utils';\nimport Navbar from '../navbar';\n// import { BrowserRouter } from 'react-router-dom';\n\nexport default class Data extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstData: '',\n      secondData: '',\n      lat: '',\n      long: '',\n      errorMessage: '',\n      successMessage: '',\n      allData: '',\n      dataReady: false,\n      filteredData: '',\n      searchQuery: '',\n      editId: ''\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.postData = this.onSubmit.bind(this);\n    this.deleteData = this.deleteData.bind(this);\n    this.search = this.search.bind(this);\n    this.setEditId = this.setEditId.bind(this);\n    this.clearFields = this.clearFields.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  componentDidMount(){\n    utils.getData()\n    .then((jsonServerResponse) => {\n      // eslint-disable-next-line\n      if (jsonServerResponse.status == 200) {\n        this.setState({\n          allData: jsonServerResponse.data\n        })\n      } else {\n        toastr.info('Could not load data. Connection may be slow')\n      }\n    })\n  }\n \n  // paginate(num){\n  //   const currentData = this.state.filteredData && this.state.filteredData.length ? this.state.filteredData : this.state.allData;\n  //   const checkValue = (val) => {\n  //     if (val < currentData.length){\n  //     currentValue = num\n  //     }\n  //  }\n    \n  //   const currentValue = num > currentData.length ? currentData.length : num\n  //   const filtered = []\n  //   for (let i=0; i<num; i++){\n  //     filtered[i] = currentData[i]\n  //   }\n  //   // this.setState({\n  //   //   filteredData: filtered\n  //   // })\n  // }\n\n\n  setEditId(id, firstData, secondData, latitude, longitude){\n    this.setState({\n      editId: id,\n      successMessage: '',\n      errorMessage: '',\n      firstData: firstData,\n      secondData: secondData,\n      lat: latitude,\n      long: longitude,\n    })\n  }\n\n  clearFields(){\n    this.setState({\n      successMessage: '',\n      firstData: '',\n      secondData: '',\n      lat: '',\n      long: '',\n    })\n  }\n\n  search = () => {\n    let { searchQuery, allData } = this.state;\n    let filteredData = allData.filter(value => {\n    return (\n        value.username.toLowerCase().includes(searchQuery.toLowerCase())\n      );\n    });\n    this.setState({ filteredData });\n};\n\n\n renderTable(){\n    const currentData = this.state.filteredData.length ? this.state.filteredData : this.state.allData;\n    for (let i=0; i<currentData.length; i++){\n      const { id, firstdata, seconddata, latitude,longitude } = currentData[i] \n      currentData[i]['actions'] = <div className=\"btn-group group\">\n      <button align=\"center\" onFocus={() => this.setEditId(id, firstdata, seconddata, latitude, longitude)} className=\"btn-success\" data-toggle=\"modal\" data-target=\"#editModal\">Edit</button>\n      <button align=\"center\" onClick={() => this.deleteData(id)} className=\"btn-danger deletebtn\">Delete</button>\n    </div>\n    }\n    const data = {\n      columns: [\n        {\n          label: 'Id',\n          field: 'id',\n          sort: 'asc',\n          width: 150\n        },\n        {\n          label: 'Username',\n          field: 'username',\n          sort: 'asc',\n          width: 270\n        },\n        {\n          label: 'Data1',\n          field: 'firstdata',\n          sort: 'asc',\n          width: 200\n        },\n        {\n          label: 'Data2',\n          field: 'seconddata',\n          sort: 'asc',\n          width: 100\n        },\n        {\n          label: 'Longitude',\n          field: 'longitude',\n          sort: 'asc',\n          width: 150\n        },\n        {\n          label: 'Latitude',\n          field: 'latitude',\n          sort: 'asc',\n          width: 100\n        },\n        {\n          label: 'Actions',\n          field: 'actions',\n          sort: 'asc',\n          width: 150\n        },\n      ],\n      rows: currentData\n    };\n    return (\n      <MDBContainer>\n        <MDBDataTable\n          responsive\n          striped\n          bordered\n          hover\n          searching= {false}\n          data={data}\n        />\n      </MDBContainer>\n    )\n }\n\n deleteData(id) {\n   utils.deleteData(id)\n   .then((jsonServerResponse) => {\n     // eslint-disable-next-line\n    if (jsonServerResponse.status == 200) {\n      toastr.info('Deleted')\n    } else {\n      toastr.info('Could not load data. Connection may be slow')\n    }\n  })\n  let copyArray = this.state.allData;\n  const index = copyArray.findIndex(x => x.id === id);\n  copyArray.splice(index, 1);\n  this.setState({ allData: copyArray });\n }\n\n  onChange(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  onSubmit = async event => {\n    event.preventDefault();\n    const decoded = jwt.decode(localStorage.getItem('token'));\n    if (!decoded){\n      this.setState({errorMessage: 'Please login'})\n    }\n    else{\n      const username = decoded.currentUser.email;\n      const { firstData, secondData, lat, long } = this.state\n    const latitude = Number(lat)\n    const longitude = Number(long)\n    const response = await fetch('/data', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        firstData, secondData, latitude, longitude, username\n      }),\n    }).catch((error) => {\n      if (error.response) {\n          this.setState({\n              errorMessage: error.response.data.message\n          })\n      } else {\n        throw error;\n      }\n    });\n    const jsonServerResponse = await response.json()\n            .then(jsonData => jsonData);\n    if (jsonServerResponse.status === 201) {\n      utils.getData()\n        .then((jsonServerResponse) => {\n          // eslint-disable-next-line\n          if (jsonServerResponse.status == 200) {\n            this.setState({\n              allData: jsonServerResponse.data\n            })\n          } else {\n            toastr.info('Could not load data. Connection may be slow')\n          }\n        })\n      toastr.info(jsonServerResponse.message)\n      this.setState({\n        errorMessage: '',\n        successMessage: 'Data added successfully. Close the form or add new data'\n      })\n    } else {\n      this.setState({\n          errorMessage: jsonServerResponse.message.message || jsonServerResponse.message\n      })\n    }\n    }\n  }\n\n  onhandleEdit = async (event, id) => {\n    event.preventDefault();\n    const verified = utils.verifyToken(localStorage.getItem('token'))\n    if (!verified){\n      this.setState({errorMessage: \"Please Login\"})\n    }\n    else {\n      const { firstData, secondData, lat, long } = this.state\n      const latitude = Number(lat)\n      const longitude = Number(long)\n      const response = await fetch(`/data/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          firstData, secondData, latitude, longitude\n        }),\n      }).catch((error) => {\n        if (error.response) {\n            this.setState({\n                errorMessage: error.response.data.message\n            })\n        } else {\n          throw error;\n        }\n      });\n      const jsonServerResponse = await response.json()\n      .then(jsonData => jsonData);\n      console.log(jsonServerResponse)\n      if (jsonServerResponse.status === 201) {\n        utils.getData()\n          .then((jsonServerResponse) => {\n            // eslint-disable-next-line\n            if (jsonServerResponse.status == 200) {\n              this.setState({\n                allData: jsonServerResponse.data\n              })\n            } else {\n              toastr.info('Could not load data. Connection may be slow')\n            }\n          })\n        toastr.info(jsonServerResponse.message.message || jsonServerResponse.message)\n        this.setState({\n          errorMessage: '',\n          successMessage: 'Data edited successfully. Close the form or edit again'\n        })\n      } else {\n        this.setState({\n            errorMessage: jsonServerResponse.message.message || jsonServerResponse.message\n        })\n      }\n    }\n  }\n\n  render() {\n    const allData = this.state.allData;\n    // eslint-disable-next-line\n    if (allData.length == 0) {\n      return (\n        <div>\n          <p>Loading</p>\n          <div className=\"spinner-grow text-primary\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n        </div>\n      )\n    }\n      return (\n        <div>\n          <Navbar link1=\"/\" value1=\"Logout\" />\n          <div className=\"container container-fluid\">\n          <div className=\"head-group\">\n            <div className=\"spacing\"></div>\n            <div className=\"data-title\"><p className=\"text-center\">Data Table</p></div>\n            <p className=\"text-center\">\n            <button onFocus={this.clearFields} data-toggle=\"modal\" data-target=\"#exampleModal\" className=\"btn btn-success\">Add new</button>\n            </p>\n            <div className=\"row\">\n              <div className=\"col-md-2\"></div>\n              <div className=\"input-group col-md-8\">\n                  <input className=\"form-control\" placeholder=\"search by username\"  name=\"searchQuery\" onChange={this.onChange} value={this.state.searchQuery}></input>\n                  <div className=\"input-group-append\">\n                    <button type=\"button\" className=\"btn btn-secondary\" onClick={this.search}><i className=\"fa fa-search\"></i></button>\n                  </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"container\">\n            {this.renderTable()}\n          </div>\n          <div className=\"modal fade\" id=\"exampleModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n            <div className=\"modal-dialog\" role=\"document\">\n              <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                  <h5 className=\"modal-title\" id=\"exampleModalLabel\">Add New Data</h5>\n                  <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                  </button>\n                </div>\n                <div className=\"modal-body\">\n                <form onSubmit={this.onSubmit}>\n                <p className=\"errormessage\">{this.state.errorMessage}</p>\n                <p className=\"successMessage\">{this.state.successMessage}</p>\n                  <div className=\"form-group\">\n                    <label className=\"col-form-label\">firstData:</label>\n                    <input name=\"firstData\" type=\"text\" className=\"form-control\" value={this.state.firstData} onChange={ this.onChange } required></input>\n                  </div>\n                  <div className=\"form-group\">\n                    <label className=\"col-form-label\">secondData:</label>\n                    <input name=\"secondData\" type=\"text\" className=\"form-control\" value={this.state.secondData} onChange={ this.onChange } required></input>\n                  </div>\n                  <div className=\"form-group\">\n                    <label className=\"col-form-label\">Latitude:</label>\n                    <input name=\"lat\" type=\"text\" className=\"form-control\" value={this.state.lat} onChange={ this.onChange } required></input>\n                  </div>\n                  <div className=\"form-group\">\n                    <label className=\"col-form-label\">Longitude:</label>\n                    <input name=\"long\" type=\"text\" className=\"form-control\" value={this.state.long} onChange={ this.onChange } required></input>\n                  </div>\n                  <div className=\"modal-footer\">\n                  <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">CLose</button>\n                  <button type=\"submit\" className=\"btn btn-primary\">Add</button>\n                </div>\n                </form>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"modal fade\" id=\"editModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"editModal\" aria-hidden=\"true\">\n            <div className=\"modal-dialog\" role=\"document\">\n              <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                  <h5 className=\"modal-title\" id=\"editModal\">Edit Data</h5>\n                  <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                  </button>\n                </div>\n                <div className=\"modal-body\">\n                <form onSubmit={(event) => { this.onhandleEdit(event, this.state.editId) }}>\n                <p className=\"errormessage\">{this.state.errorMessage}</p>\n                <p className=\"successMessage\">{this.state.successMessage}</p>\n                  <div className=\"form-group\">\n                    <label className=\"col-form-label\">firstData:</label>\n                    <input name=\"firstData\" type=\"text\" className=\"form-control\" value={this.state.firstData} onChange={ this.onChange }></input>\n                  </div>\n                  <div className=\"form-group\">\n                    <label className=\"col-form-label\">secondData:</label>\n                    <input name=\"secondData\" type=\"text\" className=\"form-control\" value={this.state.secondData} onChange={ this.onChange }></input>\n                  </div>\n                  <div className=\"form-group\">\n                    <label className=\"col-form-label\">Latitude:</label>\n                    <input name=\"lat\" type=\"text\" className=\"form-control\" value={this.state.lat} onChange={ this.onChange }></input>\n                  </div>\n                  <div className=\"form-group\">\n                    <label className=\"col-form-label\">Longitude:</label>\n                    <input name=\"long\" type=\"text\" className=\"form-control\" value={this.state.long} onChange={ this.onChange }></input>\n                  </div>\n                  <div className=\"modal-footer\">\n                  <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                  <button type=\"submit\" className=\"btn btn-primary\">Edit</button>\n                </div>\n                </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Signup from './components/signup/signup';\nimport Signin from './components/signin/signin';\nimport Contact from './components/contact';\nimport Reset from './components/resetPassword/index';\nimport Auth from './components/authentication/auth';\nimport Data from './components/data';\n\nclass App extends Component {\n \n  render() {\n    return (\n        <Router>\n          <div className=\"App\">\n            <Route exact path='/' component={Signin} />\n            <Route path='/signup' component={Signup} />\n            <Route path='/signin' component={Signin} />\n            <Route path='/contact' component={Contact} />\n            <Route path='/reset' component={Reset} />\n            <Route path='/dashboard' component={Auth(Data)} />   \n        </div>\n        </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n        <App /> ,\ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}